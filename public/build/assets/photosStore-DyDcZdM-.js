import{G as s}from"./app-CILYoJyI.js";var a=(e=>(e[e.LOADING=0]="LOADING",e[e.LOADED=1]="LOADED",e))(a||{});const i=s("photosStore",{state:()=>({photos:[],refreshedAt:new Date,state:0}),actions:{getSelectedCount(){let e=0;return this.photos.forEach(o=>{o.selected&&e++}),e},async refresh(){this.$patch({photos:[],state:0});const e=(await window.axios("/get-photos").finally(()=>{this.$patch({state:0})})).data;if(console.log(e),!e||!e.photos){console.error("Refreshing photos was not successful!");return}if(e.photos.length<=0){console.warn("0 photos were received from the server."),this.photos=[],this.refreshedAt=new Date;return}const o=e.photos.map(t=>({id:t.id,file_name:t.file_name,id_user:t.id_user,original_name:t.original_name,mime_type:t.mime_type,readable_size:t.readable_size,created_at:new Date(t.created_at),updated_at:new Date(t.created_at),selected:!1}));this.$patch({photos:o,refreshedAt:new Date})},async deleteSinglePhoto(e){const o=this.photos;this.photos=this.photos.filter(t=>t.id!=e.id),window.axios.post("/delete-single-photo",{id:e.id}).then(()=>{console.log("Successfuly deleted")}).catch(()=>{console.error("Photo could not be deleted!"),this.photos=o})}}});export{a as P,i as u};
