import{G as d}from"./app-CILYoJyI.js";const u=d("githubStore",{state:()=>({last_update:null,selected_year:2025,first_year:2017,data_by_year:new Map}),actions:{_setState(t){this.$patch(t)},async fetchGithubYearChart(t){const e=(await window.axios("/fetch-github-chart-data/"+t)).data,i=e.github_records.map(a=>({...a,date:new Date(a.date),updated_at:new Date(a.updated_at),created_at:new Date(a.created_at)})),s={year:t,total_contributions:e.total_contributions,github_records:i};this.data_by_year.set(t,s)},async setNewSelectedYear(t){this.data_by_year.has(t)||await this.fetchGithubYearChart(t),this.selected_year=t},async refresh(){const t=(await window.axios("/refresh-github-chart-data")).data,e=new Map;Object.entries(t.data_by_year).forEach(([s,a])=>{const _=a.github_records.map(r=>({...r,date:new Date(r.date),updated_at:new Date(r.updated_at),created_at:new Date(r.created_at)})),h={year:Number(s),total_contributions:Number(a.total_contributions),github_records:_};e.set(Number(s),h)});const i={last_update:new Date(t.last_update),selected_year:t.selected_year,first_year:Number(t.first_year),data_by_year:e};this._setState(i)}}});export{u};
